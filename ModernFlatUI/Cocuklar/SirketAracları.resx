<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gösterButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACEAAAAhCAYAAABX5MJvAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAARCQAAEQkAGJrNK4AAAAB3RJ
        TUUH5AkQDSQbb119wwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAPKSURBVFhH
        tZc7iJVXEIDVqBsfaJHFV6EoajRCCF4FUQuxMKaLGBHUXoKNnRaBgDYGMQjrA0TRyg0BtVA04CNoE7CJ
        xEJFQVE0wcIHEcRo1O/7OXM5e/f/995/2R34iHvOzPxz58yZORnRKo1GI2cULIStcByuwZ9wHc7Aj7AK
        JkIf20FJqxNYDIfgPvwPHyp4Dr/BRhgPTR+1JDcEf9UOeALxob/hChyFfdADZuI2vAV13sCvYOaa/jqW
        zOgzOAbxy/3ITlgEfX4ljIYZ8B2chwjmL1gJTd22kimbAQPQ0Ts4AXMh16lC2+/BjEXwSrHfVkIRPAIz
        YAA/QdvzzfcT38BDMJDfYQoUewNKUrIIowbMQK0Cy3XBAv0X9PVDWkuaFYKC19BbEGnscwSdSmbzCRwE
        /d2DOTCwLzatZq+hRhZh7jBpdSaZ3ZcQmd2W1pJWibBpI7IWLCpvgWufwmT/XUeSrZiNXjAIr/IYSFol
        wqadUGX7wDiVYU2icFpHwgbMgH5vwTTXKoVNW7HKNqJwsB+2x991JGxgLfwHT6HIcKWw6SwwCDuhf5s6
        m89JsGgLp3Uk2SyHV/ASlrhWKWw6jAzCVuzfY+ECPIbP01rSbi+hDw621/AMvnKtUti0cAzC/9qKXTuS
        1vbCyLSWLAaW0IVNoI8HMMu1SmHTcayyPcJZ4NoWeA8vYH1aK+jq6kqW5ZLp/gz6vQoTXKsUNk2b49gB
        tEFlsN3+ATp5BOsg/0BBq2R7U+EGaL8nrSWtEmHT4eN7QAMLMh4oX8M/4LrnuhuKtHZA9B4z2ZyolZIU
        7Pe+B7xSTsNY/xY8JgORu3AAPK7V8AVEHQULwN6gvg2rC4q9SkkKDiwfJBraOZ2GsTcPdoHH443x3t+E
        w7AMmtcYpsM50I/TdCnEXkGpZArOEB8k4cDs2H5jfxI4jOaDZ57viRmIAOQsWJCteunLmbQoeH6Rfsex
        09Bh1M9RhgFZA/mxiT3iNJwCr/pMaNr1k3wTFB8k4cxp+As4C2zFK8AbtRm8ht6CeA6aQTNgAGEfXILm
        WJd+km+CV9QHie+B3JGFaytu/Yi3wCK0BjwCM5DvB5ehViCigRmwm1rxFqWzwCtrJ7QR2Qc8xrgFHp1H
        UBaEtA9EyRUSDjXHsdPQYeQssGcUnbAEa6AsgKBPIANKKA0Ci9AaKAsgMJDZkL42RKLDDH+pHyoLILgI
        c5P50AlO6wbSm0yHVnBcJ5A7yWzoBeedBOJzoSeZDI/wgRyL0BrIA/CR3Z3Uh0/4SI7/Y2VTuwM+J7sb
        jcaIj2/Mo6hG00smAAAAAElFTkSuQmCC
</value>
  </data>
</root>